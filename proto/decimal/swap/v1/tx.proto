syntax = "proto3";
package decimal.swap.v1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "bitbucket.org/decimalteam/go-smart-node/x/swap/types";

service Msg {
  rpc HTLT(MsgHTLT) returns (MsgHTLTResponse);
  rpc Redeem(MsgRedeem) returns (MsgRedeemResponse);
  rpc Refund(MsgRefund) returns (MsgRefundResponse);
}

enum TransferType {
  option (gogoproto.goproto_enum_stringer) = false;

  TransferTypeOut = 0;
  TransferTypeIn = 1;
}

message MsgHTLT {
  option (gogoproto.equal) = false;

  TransferType transfer_type = 1 [
    (gogoproto.moretags) = "yaml:\"transfer_type\""
  ];
  string from = 2 [
    (gogoproto.moretags) = "yaml:\"from\""
  ];
  string recipient = 3 [
    (gogoproto.moretags) = "yaml:\"recipient\""
  ];
  bytes hashed_secret = 4 [
    (gogoproto.customtype) = "Hash",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"hashed_secret\""
  ];
  bytes secret = 5 [
    (gogoproto.moretags) = "yaml:\"secret\""
  ];
  repeated cosmos.base.v1beta1.Coin amount = 6 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"amount\""
  ];
}

message MsgHTLTResponse {}

message MsgRedeem {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string from = 1 [
    (gogoproto.moretags) = "yaml:\"from\""
  ];
  bytes secret = 2;
}

message MsgRedeemResponse {}

message MsgRefund {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string from = 1 [
    (gogoproto.moretags) = "yaml:\"from\""
  ];
  bytes hashed_secret = 2 [
    (gogoproto.customtype) = "Hash",
    (gogoproto.nullable) = false
  ];
}

message MsgRefundResponse {}