syntax = "proto3";
package decimal.validator.v1;

import "gogoproto/gogo.proto";
import "decimal/validator/v1/validator.proto";
import "decimal/validator/v1/delegation.proto";
import "decimal/validator/v1/delegation_nft.proto";

option go_package = "bitbucket.org/decimalteam/go-smart-node/x/validator/types";

message GenesisState {
  // params defines all the paramaters of related to deposit.
  Params params = 1 [(gogoproto.nullable) = false];

  // last_total_power tracks the total amounts of bonded tokens recorded during
  // the previous end block.
  bytes last_total_power = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.moretags)   = "yaml:\"last_total_power\"",
    (gogoproto.nullable)   = false
  ];

  // last_validator_powers is a special index that provides a historical list
  // of the last-block's bonded validators.
  repeated LastValidatorPower last_validator_powers = 3
  [(gogoproto.moretags) = "yaml:\"last_validator_powers\"", (gogoproto.nullable) = false];

  // delegations defines the validator set at genesis.
  repeated Validator validators = 4
  [(gogoproto.moretags) = "yaml:\"validators\"", (gogoproto.nullable) = false];

  // delegations defines the delegations active at genesis.
  repeated Delegation delegations = 5
  [(gogoproto.moretags) = "yaml:\"delegations\"",(gogoproto.nullable) = false];

  //delegations_nft defines ther delegations via nft active at genesis
  repeated DelegationNFT delegations_nft = 6
  [(gogoproto.moretags) = "yaml:\"delegations_nft\"",(gogoproto.nullable) = false];

  // unbonding_delegations defines the unbonding delegations active at genesis.
  repeated UnbondingDelegation unbonding_delegations = 7
  [(gogoproto.moretags) = "yaml:\"unbonding_delegations\"", (gogoproto.nullable) = false];

  bool exported = 8;
}

// LastValidatorPower required for validator set update logic.
message LastValidatorPower {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  // address is the address of the validator.
  string address = 1;

  // power defines the power of the validator.
  int64 power = 2;
}
